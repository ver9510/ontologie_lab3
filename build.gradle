buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/"
        }
        maven {
            url "https://maven.java.net/content/groups/public/"
        }
        maven { url 'http://dl.bintray.com/vermeulen-mp/gradle-plugins' }
        maven { url 'https://repo.spring.io/libs-snapshot' }

    }

    dependencies {
        classpath "io.franzbecker:gradle-lombok:1.11"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"

    }
}

plugins {
    id "org.springframework.boot" version "2.0.1.RELEASE"
}

group 'ontologie_lab3'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'io.franzbecker.gradle-lombok'
jar{
    enabled = true
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/"
    }
    maven {
        url "https://maven.java.net/content/groups/public/"
    }
}
def jarPath = 'https://github.com/BorderCloud/SPARQL-JAVA/blob/master/dist/SPARQL-JAVA.jar?raw=true'
def jarName = 'SPARQL-JAVA'
def urlFile = { url, name ->
    File file = new File("$buildDir/download/${name}.jar")
    file.parentFile.mkdirs()
    if (!file.exists()) {
        new URL(url).withInputStream { downloadStream ->
            file.withOutputStream { fileOut ->
                fileOut << downloadStream
            }
        }
    }
    files(file.absolutePath)
}
task buildThis(){build}
task stage(dependsOn: ['buildThis', 'clean'])

buildThis.mustRunAfter(clean)

task copyToLib(type: Copy) {
    into "$buildDir/server"
    from(configurations.compile) {
        include "webapp-runner*"
    }
}

task downloadUrlFile() {
    doFirst { urlFile(jarPath, jarName) }
}
buildThis.dependsOn(downloadUrlFile)
jar.dependsOn(buildThis)
jar.dependsOn(copyToLib)
stage.dependsOn(assemble)



dependencies {
    compile urlFile(jarPath, jarName)

    compile 'org.openrdf:openrdf-queryparser-sparql:+'
    compile 'org.openrdf:openrdf-repository-api:2.0.1'
    compile 'org.eclipse.rdf4j:rdf4j-repository-sparql:2.3.1'
    compile 'org.springframework.boot:spring-boot-starter-web:+'



    compile 'org.json:json:20180130'

    compile 'com.github.jsimone:webapp-runner:8.5.23.0'

    compile 'javax:javaee-api:+'
    compile 'org.springframework:spring-context:5.0.4.RELEASE'
    compile 'org.springframework:spring-webmvc:+'
    compile('javax.servlet:jstl:+')
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'jstl:jstl:1.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.0'

    compile 'org.springframework.data:spring-data-jpa:2.0.3.RELEASE'
    compile "org.hibernate:hibernate-java8:+"

    compile 'org.apache.logging.log4j:log4j-api:2.11.0'
    compile 'org.apache.logging.log4j:log4j-core:2.11.0'

    compile 'com.h2database:h2:1.4.196'

    compile('mysql:mysql-connector-java:6.0.6')

    compile group: 'org.modelmapper', name: 'modelmapper', version: '1.1.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'

    compile 'javax.json.bind:javax.json.bind-api:1.0'

    compile 'org.eclipse:yasson:1.0'

    compile 'org.glassfish:javax.json:1.1'
}
